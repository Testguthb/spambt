import logging

from telethon import Button
from config import callback_message, ADMIN_ID_LIST, New_Message, bot
from func.func import save_setting 

@bot.on(New_Message(pattern="/start"))
async def start(event: callback_message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    """
    logging.info(f"–ù–∞–∂–∞—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ /start")
    if event.sender_id in ADMIN_ID_LIST:
        buttons = [
            [Button.inline("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç üë§", b"add_account"),
             Button.inline("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É üë•", b"add_groups")],
            [Button.inline("üë§ –ú–æ–∏ –∞–∫–∫–∞—É–Ω—Ç—ã", b"my_accounts")],
            [Button.inline("üì® –†–∞—Å—Å—ã–ª–∫–∞ –≤–æ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã", b"broadcast_All_account")],
            [Button.inline("‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤–æ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã", b"Stop_Broadcast_All_account")],
            [Button.inline("üïó –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏", b"show_history")]
        ]
        await event.respond("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω!", buttons=buttons)
    else:
        await event.respond("‚õî –ó–∞–ø—Ä–µ—â–µ–Ω–æ!")


@bot.on(New_Message(pattern="/setpause"))
async def set_pause_time(event: callback_message):
    """
    –£—Å—Ç–∞–Ω–∞–≤–∞–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –Ω–æ—á–Ω–æ–π –ø–∞—É–∑—ã.
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setpause 22 8
    """
    if event.sender_id not in ADMIN_ID_LIST:
        return

    parts = event.text.split()
    if len(parts) != 3:
        await event.respond(
            "‚ö†Ô∏è **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.**\n–í–≤–µ–¥–∏—Ç–µ: `/setpause [—á–∞—Å_–Ω–∞—á–∞–ª–∞] [—á–∞—Å_–æ–∫–æ–Ω—á–∞–Ω–∏—è]`\n"
            "**–ù–∞–ø—Ä–∏–º–µ—Ä:** `/setpause 22 8`"
        )
        return

    try:
        start_hour = int(parts[1])
        end_hour = int(parts[2])

        if not (0 <= start_hour <= 23 and 0 <= end_hour <= 23):
            raise ValueError("–ß–∞—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Å 0 –¥–æ 23.")

        save_setting('pause_start_hour', start_hour)
        save_setting('pause_end_hour', end_hour)

        await event.respond(f"‚úÖ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.**\n–ù–æ—á–Ω–∞—è –ø–∞—É–∑–∞: —Å **{start_hour}:00** –¥–æ **{end_hour}:00**.")
    except ValueError as e:
        await event.respond(f"‚ùå **–û—à–∏–±–∫–∞!**\n{e}\n\n–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 23.")